FAILED_STEPS_EXCLUDE = [
    "bot_update",
    "isolate tests",
    "package build",
    "extract build",
    "cleanup_temp",
    "gsutil upload",
    "taskkill",
    "Failure reason",
    "steps",
    ".* \\(flakes\\)",
    ".* \\(retry shards with patch\\)",
    ".* \\(with patch\\)",
    ".* \\(without patch\\)",
]

BRANCH_BUIDLERS = [
    "V8 Linux - builder",
    "V8 Linux - debug builder",
    "V8 Linux",
    "V8 Linux - debug",
    "V8 Linux - shared",
    "V8 Linux - noi18n - debug",
    "V8 Linux - verify csa",
    "V8 Linux64 - builder",
    "V8 Linux64 - debug builder",
    "V8 Linux64 - custom snapshot - debug builder",
    "V8 Linux64",
    "V8 Linux64 - internal snapshot",
    "V8 Linux64 - debug",
    "V8 Linux64 - custom snapshot - debug",
    "V8 Linux64 - debug - header includes",
    "V8 Linux64 - shared",
    "V8 Linux64 - verify csa",
    "V8 Linux64 - pointer compression",
    "V8 Fuchsia - builder",
    "V8 Fuchsia - debug builder",
    "V8 Win32 - builder",
    "V8 Win32 - debug builder",
    "V8 Win32",
    "V8 Win32 - debug",
    "V8 Win64",
    "V8 Win64 - debug",
    "V8 Win64 - msvc",
    "V8 Mac64",
    "V8 Mac64 - debug",
    "V8 Linux - gc stress",
    "V8 Linux64 GC Stress - custom snapshot",
    "V8 Mac64 GC Stress",
    "V8 Linux64 ASAN",
    "V8 Linux64 - cfi",
    "V8 Linux64 TSAN - builder",
    "V8 Linux64 TSAN",
    "V8 Linux64 TSAN - concurrent marking",
    "V8 Linux64 TSAN - isolates",
    "V8 Linux - arm64 - sim - CFI",
    "V8 Linux - arm64 - sim - MSAN",
    "V8 Linux64 UBSan",
    "V8 Mac64 ASAN",
    "V8 Win64 ASAN",
    "V8 Presubmit",
    "V8 Fuzzer",
    "V8 Linux gcc",
    "V8 Linux64 gcc - debug",
    "V8 Arm - debug builder",
    "V8 Android Arm - builder",
    "V8 Linux - arm - sim",
    "V8 Linux - arm - sim - debug",
    "V8 Linux - arm - sim - lite",
    "V8 Linux - arm - sim - lite - debug",
    "V8 Arm",
    "V8 Arm - debug",
    "V8 Arm GC Stress",
    "V8 Arm64 - builder",
    "V8 Android Arm64 - builder",
    "V8 Android Arm64 - debug builder",
    "V8 Android Arm64 - N5X",
    "V8 Linux - arm64 - sim",
    "V8 Linux - arm64 - sim - debug",
    "V8 Linux - arm64 - sim - gc stress",
    "V8 Linux64 - arm64 - sim - pointer compression - builder",
    "V8 Linux64 - arm64 - sim - pointer compression",
    "V8 Linux - mipsel - sim - builder",
    "V8 Linux - mips64el - sim - builder",
    "V8 Linux - mipsel - sim",
    "V8 Linux - mips64el - sim",
    "V8 Linux - ppc64 - sim",
    "V8 Linux - s390x - sim",
]
luci.notifier(
    name = "beta/stable notifier",
    on_occurrence = ["FAILURE"],
    failed_step_regexp_exclude = FAILED_STEPS_EXCLUDE,
    notify_emails = [
        "almuthanna@chromium.org",
        "liviurau@chromium.org",
        "machenbach@chromium.org",
        "tmrts@chromium.org",
        "v8-waterfall-sheriff@grotations.appspotmail.com",
    ],
    notified_by = ["ci.br.beta/%s" % b for b in BRANCH_BUIDLERS] + ["ci.br.stable/%s" % b for b in BRANCH_BUIDLERS],
)

luci.notifier(
    name = "notify victor",
    on_occurrence = ["FAILURE"],
    failed_step_regexp_exclude = FAILED_STEPS_EXCLUDE,
    notify_emails = [
        "victorgomes@chromium.org",
    ],
    notified_by = ["V8 Linux64 - reverse jsargs"],
)
